package main

import (
	"fmt"
	"sync"
)

func main() {
	nums := [5]int{2, 4, 6, 8, 10} // Инициализиурем массив nums и сразу же присваиваем значения элементов

	var wg sync.WaitGroup // Инициализируем переменную/объект wg структуры WaitGroup

	// Проходимся по массиву nums, выбирая только значения(индексы опускаем)
	for _, v := range nums {
		wg.Add(1) // Увеличиваем счётчик горутин на единичку

		/*
		 Выделяем новую горутину на выполнение анонимной функции
		 и передаём в функцию определённое значение из массива
		*/
		go func(x int) {
			defer wg.Done() // После завершения работы анонимной функции уменьшаем счётчик горутин

			fmt.Printf("%d^2 = %d\n", x, x*x) // Выводим в поток вывода расчёты
		}(v)
	}

	wg.Wait() // Ожидаем, пока счётчик горутин не будет равен 0
}
